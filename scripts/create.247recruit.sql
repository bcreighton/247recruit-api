-- remove foreign constraint from agent
ALTER TABLE IF EXISTS agents
    DROP COLUMN brokerage;

DROP TABLE IF EXISTS notes;
DROP TABLE IF EXISTS followed_agents;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS brokerages;
DROP TABLE IF EXISTS agents;

-- create agent table without brokerage relationship
CREATE TABLE agents (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL,
    license_num INTEGER CHECK (license_num > 99999) NOT NULL,
    email TEXT NOT NULL,
    phone TEXT,
    license_exp DATE,
    sponsor_date DATE,
    list_units INTEGER NOT NULL,
    list_vol DECIMAL (12,2) NOT NULL,
    sell_units INTEGER NOT NULL,
    sell_vol DECIMAL (12,2) NOT NULL,
    tot_units INTEGER NOT NULL,
    tot_vol DECIMAL (14,2) NOT NULL
);

CREATE TABLE brokerages (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    brokerage_name TEXT NOT NULL,
    broker_id INTEGER REFERENCES agents(id),
    street TEXT,
    city TEXT,
    st TEXT
);

-- add brokerage relationship between agent and brokerage
ALTER TABLE agents
    ADD COLUMN brokerage INTEGER REFERENCES brokerages(id);

CREATE TABLE users (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    username TEXT NOT NULL,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    email TEXT NOT NULL,
    phone TEXT NOT NULL,
    brokerage INTEGER REFERENCES brokerages(id) NOT NULL
);

CREATE TABLE notes (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    timestamp TIMESTAMP NOT NULL,
    title TEXT NOT NULL,
    content TEXT NOT NULL,
    username_id INTEGER REFERENCES users(id) NOT NULL,
    agent_id INTEGER REFERENCES agents(id) NOT NULL
);

CREATE TABLE followed_agents (
    agent_id INTEGER REFERENCES agents(id),
    username_id INTEGER REFERENCES users(id),
    PRIMARY KEY (agent_id, username_id)
);