-- remove foreign constraint from agent
ALTER TABLE IF EXISTS agent
    DROP COLUMN brokerage;

-- DROP the table and constraints in a specific order
DROP TABLE IF EXISTS note;
DROP TABLE IF EXISTS followed_agent;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS brokerage;
DROP TABLE IF EXISTS agent;

-- create agent table without brokerage relationship
CREATE TABLE agent (
    id INTEGER PRIMARY GENERATED BY DEFAULT AS IDENTITY,
    agent_name TEXT NOT NULL,
    license_num NUMERIC NOT NULL,
    email TEXT NOT NULL,
    phone TEXT,
    license_exp DATE,
    sponsor_date DATE,
    list_units DECIMAL (7,2) NOT NULL,
    list_vol DECIMAL (12,2) NOT NULL,
    sell_units DECIMAL (7,2) NOT NULL,
    sell_vol DECIMAL (12,2) NOT NULL,
    tot_units DECIMAL (10,2) NOT NULL,
    tot_vol DECIMAL (14,2) NOT NULL
);

CREATE TABLE brokerage (
    id INTEGER PRIMARY GENERATE BY DEFAULT AS IDENTITY,
    brokerage_name TEXT NOT NULL,
    broker_id INTEGER REFERENCES agent(id),
    street TEXT,
    city TEXT,
    st TEXT
);

-- add brokerage relationship between agent and brokerage
ALTER TABLE agent
    ADD COLUMN brokerage INTEGER REFERENCES brokerage(id);

CREATE TABLE user (
    id INTEGER PRIMARY GENERATE BY DEFAULT AS IDENTITY,
    username TEXT NOT NULL,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    email TEXT NOT NULL,
    phone TEXT NOT NULL,
    brokerage INTEGER REFERENCES brokerage(id)
);

CREATE TABLE followed_agent (
    agent_id INTEGER REFERENCES agent(id),
    username_id INTEGER REFERENCES user(id),
    PRIMARY KEY (agent_id, username_id)
);

CREATE TABLE note (
    id INTEGER PRIMARY GENERATE BY DEFAULT AS IDENTITY,
    date DATE NOT NULL,
    title TEXT NOT NULL,
    content TEXT NOT NULL,
    username_id INTEGER REFERENCES followed_agent(username_id),
    agent_id INTEGER REFERENCES followed_agent(agent_id)
);